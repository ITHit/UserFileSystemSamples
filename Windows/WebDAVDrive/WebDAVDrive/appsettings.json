{
  // Unique ID of this application.
  // To run more than one instance of this application side-by-side on one machine
  // (aka Corporate Drive and Personal Drive) set a unique ID for each instance.
  "AppID": "WebDAVDrive",


  // License to activate the IT Hit User File System Engine.
  // Set the license content directly as value. Make sure to escape quotes: \":
  // "UserFileSystemLicense": "<?xml version=\"1.0\" encoding=\"utf-8\"?><License...

  // If no license is specified, the Engine will be activated
  // automatically via internet and will function for 5 days. The Engine will stop working after that.
  // To enable a 1-month trial period, download a trial license here: https://userfilesystem.com/download/
  "UserFileSystemLicense": "",


  // License to activate the IT Hit WebDAV Client Library for .NET. 
  // Set the license content directly as value. Make sure to escape quotes: \":
  // "WebDAVClientLicense": "<?xml version=\"1.0\" encoding=\"utf-8\"?><Licenseï¿½

  // If no license is specified, the Library will be activated
  // automatically via internet and will function for 5 days. The Library will stop working after that.
  // To enable a 1-month trial period, download a trial license here: https://www.webdavsystem.com/client/download/
  "WebDAVClientLicense": "",


  // Your WebDAV server URLs. This sample will mount each URL under separate sync root.
  // In case this parameter is empty, the dialog to specify the server URL will be displayed during first start. 
  // In this case, the URL is saved in the registry under the HKEY_CURRENT_USER\SOFTWARE\<AppID> key.

  // For testing and demo purposes you can IT Hit's demo servers. 
  // Navigate to https://webdavserver.net or https://webdavserver.com in a web browser. 
  // Copy the URL or your test folder, that looks like  https://webdavserver.net/User123456/ and specify it below.

  // This sample will try to connect to sockets server located on the same port as your WebDAV server, on server root.
  // In case of HTTPS the WSS protocol will be used. In case of HTTP - WS.
  // For exmple for https://serv:2345/Path/ it will use the wss://serv:2345/ URI.
  "WebDAVServerURLs": [
    "https://server1/",
    "https://server2/"
  ],


  //Your virtual file system will be mounted under this path.
  "UserFileSystemRootPath": "%USERPROFILE%\\DAVv81\\",


  // Automatic lock timout in milliseconds. Automatic lock will be extended (refreshed) when this period is about to expire.
  // This type of lock is set when Microsoft Office or AutoCAD application opens a document.
  "AutoLockTimoutMs": 600000,


  // Manual lock timout in milliseconds. Manual lock is set via context menu and is not extended. Set to -1 for infinity.
  // Note that many WebDAV servers do not accept Infinity and will set its own default timeout instead.
  "ManualLockTimoutMs": -1,


  // Full outgoing (from the user file system to the remote storage) synchronization and hydration/dehydration interval in milliseconds.
  "SyncIntervalMs": 10000,


  // Preferred incoming synchronization mode. Allowed values are: SyncId, Disabled, TimerPooling.
  //  - SyncId - Use Sync ID algorithm. If not available, falls back to CRUDE+pooling (Disabled mode).
  //  - Disabled - This sample will try to receive CRUDE updates via web sockets + pooling on web sockets connection. If web sockets are not available, falls back to TimerPooling.
  //  - TimerPooling - The Engine will traverse folders loaded on the client, list each folder remote storage content and compare with client content.
  "PreferredIncomingSyncMode": "SyncId",


  // Maximum number of create/update/read concurrent requests to remote storage. If null then 6 value is used.
  "MaxTransferConcurrentRequests": 6,


  // Maximum number of listing/delete/move concurrent requests to remote storage. If null then int.Max value is used.
  "MaxOperationsConcurrentRequests": null,


  // Automatically lock the file in remote storage when a file handle is being opened for writing, unlock on close.
  // This enables automatic locking of MS Office documents when opened for editing.
  "AutoLock": true,

  // Mark documents locked by other users as read-only for this user and vice versa.
  // A read-only MS Office document opens in a view-only mode preventing document collisions.
  "SetLockReadOnly": true,


  // Path to external shell extensions COM server executable for app without identity. Can be absolute or relative path.

  // If empty or not set, the system will assume that COM classes are hosted in the current 
  // process (both for app with and without identity). This app starts COM server in this case 
  // to listen to incoming shell extension calls.

  // Uncomment this parameter ONLY in case you need to run the application without identity 
  // AND to host shell extensions in external COM server executable.
  //"ShellExtensionsComServerExePath": "WebDAVDrive.ShellExtension.exe",


  // To test performance:
  // 1. Compile the project in the release mode.
  // 2. Run without debugger arrached (Ctrl-F5).


  // URL to get a thumbnail for Windows Explorer thumbnails mode.
  // Your server must return 404 Not Found if the thumbnail can not be generated.
  // If incorrect size is returned, the image will be resized by the platform automatically.
  "ThumbnailGeneratorUrl": "{path to file}?width={thumbnail width}&height={thumbnail height}",


  // File types to request thumbnails for.
  // To request thumbnails for specific file types, list file types using '|' separator.
  // To request thumbnails for all file types set the value to "*".
  "RequestThumbnailsFor": "png|jpeg|gif|jpg|apng|avif|jfif|pjpeg|pjp|svg|webp|bmp|ico|cur|tif|tiff|heic|hif"
}