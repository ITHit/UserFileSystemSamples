<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add.Content" xml:space="preserve">
    <value>Add</value>
    <comment>Add button label</comment>
  </data>
  <data name="Cancel.Content" xml:space="preserve">
    <value>Cancel</value>
    <comment>Cancel button label</comment>
  </data>
  <data name="Close.Content" xml:space="preserve">
    <value>Close</value>
    <comment>Close button label</comment>
  </data>
  <data name="CompareWindow.Title" xml:space="preserve">
    <value>Compare</value>
    <comment>Compare window title</comment>
  </data>
  <data name="DoNotShowScreen.Content" xml:space="preserve">
    <value>Do not show this screen</value>
    <comment>"Do not show this screen" label (startup screen)</comment>
  </data>
  <data name="EnterUrl.Text" xml:space="preserve">
    <value>Enter URL</value>
    <comment>Enter URL TextBlock content</comment>
  </data>
  <data name="InvalidUrl" xml:space="preserve">
    <value>Invalid URL. Please enter a valid URL.</value>
    <comment>Invalid URL validation text</comment>
  </data>
  <data name="MountNewDriveButton.Content" xml:space="preserve">
    <value>Mount New Drive</value>
    <comment>Mount New Drive button label</comment>
  </data>
  <data name="Startup.Title" xml:space="preserve">
    <value>Startup</value>
    <comment>Startup window title</comment>
  </data>
  <data name="UrlEntry.PlaceholderText" xml:space="preserve">
    <value>Enter URL here</value>
    <comment>URL textbox placeholder</comment>
  </data>
  <data name="UrlRequiredMessage.Text" xml:space="preserve">
    <value>URL is required.</value>
    <comment>URL required validation text</comment>
  </data>
  <data name="CredentialPickerLogin.Title" xml:space="preserve">
    <value>Login</value>
    <comment>Credential Picker Login window title</comment>
  </data>
  <data name="MountNewDriveWindow.Title" xml:space="preserve">
    <value>Mount New Drive</value>
    <comment>Mount New Drive window title</comment>
  </data>
  <data name="WebBrowserLogin.Title" xml:space="preserve">
    <value>Login</value>
    <comment>Web Browser Login window title</comment>
  </data>
  <data name="ErrorContentDialog.Title" xml:space="preserve">
    <value>Error</value>
    <comment>Error content dialog title</comment>
  </data>
  <data name="ErrorContentDialog.CloseButtonText" xml:space="preserve">
    <value>OK</value>
    <comment>Error content dialog close button text</comment>
  </data>
  <data name="ErrorDetailsWindow.Title" xml:space="preserve">
    <value>Error Details</value>
    <comment>Error Details window title</comment>
  </data>
  <data name="FilePath.Text" xml:space="preserve">
    <value>File Path</value>
    <comment>Error File Path label text</comment>
  </data>
  <data name="TargetPath.Text" xml:space="preserve">
    <value>Target Path</value>
    <comment>Error Target Path label text</comment>
  </data>
  <data name="RemoteStoragePath.Text" xml:space="preserve">
    <value>Remote Storage Path</value>
    <comment>Error Remote Storage Path label text</comment>
  </data>
  <data name="Message.Text" xml:space="preserve">
    <value>Message</value>
    <comment>Error Message label text</comment>
  </data>
  <data name="SyncDirection.Text" xml:space="preserve">
    <value>Sync Direction</value>
    <comment>Error Sync Direction label text</comment>
  </data>
  <data name="OperationStatus.Text" xml:space="preserve">
    <value>Operation Status</value>
    <comment>Error Operation Status label text</comment>
  </data>
  <data name="OperationType.Text" xml:space="preserve">
    <value>Operation Type</value>
    <comment>Error Operation Type label text</comment>
  </data>
  <data name="ComponentName.Text" xml:space="preserve">
    <value>Component Name</value>
    <comment>Error ComponentName label text</comment>
  </data>
  <data name="NotificationTime.Text" xml:space="preserve">
    <value>Notification Time</value>
    <comment>Error Notification Time label text</comment>
  </data>
  <data name="Toggle.OnContent" xml:space="preserve">
    <value>On</value>
    <comment>"On" option of standard toggler</comment>
  </data>
  <data name="BottomToggle.OnContent" xml:space="preserve">
    <value>On</value>
    <comment>"On" option of standard toggler</comment>
  </data>
  <data name="Toggle.OffContent" xml:space="preserve">
    <value>Off</value>
    <comment>"Off" option of standard toggler</comment>
  </data>
  <data name="BottomToggle.OffContent" xml:space="preserve">
    <value>Off</value>
    <comment>"Off" option of standard toggler</comment>
  </data>
  <data name="EnableAutomaticLocking.Text" xml:space="preserve">
    <value>Enable automatic locking</value>
    <comment>Enable automatic locking label (settings)</comment>
  </data>
  <data name="EnableAutomaticLockingDescription.Text" xml:space="preserve">
    <value>Automatically lock the file in remote storage when a file handle is being opened for writing, unlock on close. This enables automatic locking of MS Office documents when opened for editing.</value>
    <comment>Enable automatic locking description (settings)</comment>
  </data>
  <data name="ReadOnlyOnLockedFilesLabel.Text" xml:space="preserve">
    <value>Set read-only attribute on files locked by other users</value>
    <comment>Read-only on locked file label (settings)</comment>
  </data>
  <data name="ReadOnlyOnLockedFilesLabelDescription.Text" xml:space="preserve">
    <value>Mark documents locked by other users as read-only for this user and vice versa. A read-only MS Office document opens in a view-only mode preventing document collisions.</value>
    <comment>Read-only on locked file description (settings)</comment>
  </data>
  <data name="ManualLockTimeoutLabel.Text" xml:space="preserve">
    <value>Manual lock timeout (seconds)</value>
    <comment>Manual lock timeout label (settings)</comment>
  </data>
  <data name="ManualLockTimeoutLabelDescription.Text" xml:space="preserve">
    <value>Manual lock timeout in seconds. Manual lock is set via context menu and is not extended. Set to -1 for infinity. Note that many WebDAV servers do not accept Infinity and will set its own default timeout instead.</value>
    <comment>Manual lock timeout description (settings)</comment>
  </data>
  <data name="RequiredSettingMessage.Text" xml:space="preserve">
    <value>Required</value>
    <comment>Required validation message (settings)</comment>
  </data>
  <data name="AutomaticLockTimeoutLabel.Text" xml:space="preserve">
    <value>Automatic lock timeout (seconds)</value>
    <comment>Automatic lock timeout label (settings)</comment>
  </data>
  <data name="AutomaticLockTimeoutLabelDescription.Text" xml:space="preserve">
    <value>Automatic lock timeout in seconds. Automatic lock will be extended (refreshed) when this period is about to expire. This type of lock is set when Microsoft Office or AutoCAD application opens a document.</value>
    <comment>Automatic lock timeout label (settings)</comment>
  </data>
  <data name="Save.Content" xml:space="preserve">
    <value>Save</value>
    <comment>Save button label</comment>
  </data>
  <data name="SettingsWindow.Title" xml:space="preserve">
    <value>Settings</value>
    <comment>Settings window title</comment>
  </data>
  <data name="ExceptionStackTrace.Text" xml:space="preserve">
    <value>Exception Stack Trace</value>
    <comment>Error Exception Stack Trace label text</comment>
  </data>
  <data name="HistoryItemsLabel.Text" xml:space="preserve">
    <value>History Items</value>
    <comment>History Items header text (error details window)</comment>
  </data>
  <data name="ErrorDetailsLabel.Text" xml:space="preserve">
    <value>Error Details</value>
    <comment>Error Details header text</comment>
  </data>
  <data name="OpenLogButton.Content" xml:space="preserve">
    <value>Open Log</value>
    <comment>Open Log button label</comment>
  </data>
  <data name="RequestSupportButton.Content" xml:space="preserve">
    <value>Request Support</value>
    <comment>Request Support button label</comment>
  </data>
  <data name="NotApplicable" xml:space="preserve">
    <value>N/A</value>
    <comment>N/A text</comment>
  </data>
  <data name="CheckInSuccess" xml:space="preserve">
    <value>CheckIn Success</value>
  </data>
  <data name="CheckInFailed" xml:space="preserve">
    <value>CheckIn Failed</value>
  </data>
  <data name="CheckOutSuccess" xml:space="preserve">
    <value>CheckOut Success</value>
  </data>
  <data name="CheckOutFailed" xml:space="preserve">
    <value>CheckOut Failed</value>
  </data>
  <data name="HideLog" xml:space="preserve">
    <value>Hide Console</value>
  </data>
  <data name="ShowLog" xml:space="preserve">
    <value>Show Console</value>
  </data>
  <data name="TestMenu" xml:space="preserve">
    <value>Test menu label</value>
  </data>
  <data name="TrayProductName" xml:space="preserve">
    <value>WebDAV Drive Sample</value>
    <comment>Product name displaying on tray icon hover</comment>
  </data>
  <data name="AutomaticValidationMessage.Text" xml:space="preserve">
    <value>Must be a number</value>
    <comment>Enable automatic locking validation message</comment>
  </data>
  <data name="ManualValidationMessage.Text" xml:space="preserve">
    <value>Must be a number</value>
    <comment>Enable manual locking validation message</comment>
  </data>
  <data name="TrayMaxHistoryItemsValidationMessage.Text" xml:space="preserve">
    <value>Enter 10+ integer</value>
    <comment>Enable manual locking validation message</comment>
  </data>
  <data name="EnableDebugLogging" xml:space="preserve">
    <value>Enable Debug Logging</value>
    <comment>Enable Debug Logging context menu text</comment>
  </data>
  <data name="DisableDebugLogging" xml:space="preserve">
    <value>Disable Debug Logging</value>
    <comment>Disable Debug Logging context menu text</comment>
  </data>
  <data name="OpenLogFile.Text" xml:space="preserve">
    <value>Open Log File</value>
    <comment>Open Log File menu text</comment>
  </data>
  <data name="TrayMaxHistoryItemsLabel.Text" xml:space="preserve">
    <value>Tray max history items</value>
    <comment>Tray max history items label (settings)</comment>
  </data>
  <data name="TrayMaxHistoryItemsLabelDescription.Text" xml:space="preserve">
    <value>Controls the number of events in the tray window.</value>
    <comment>Tray max history items description (settings)</comment>
  </data>
</root>