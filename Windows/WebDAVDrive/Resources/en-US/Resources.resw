<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add.Content" xml:space="preserve">
    <value>Add</value>
    <comment>Add button label</comment>
  </data>
  <data name="Cancel.Content" xml:space="preserve">
    <value>Cancel</value>
    <comment>Cancel button label</comment>
  </data>
  <data name="Close.Content" xml:space="preserve">
    <value>Close</value>
    <comment>Close button label</comment>
  </data>
  <data name="Compare.Content" xml:space="preserve">
    <value>Compare</value>
    <comment>Compare button label</comment>
  </data>
  <data name="CompareWindow.Title" xml:space="preserve">
    <value>Compare</value>
    <comment>Compare window title</comment>
  </data>
  <data name="DoNotShowScreen.Content" xml:space="preserve">
    <value>Do not show this screen</value>
    <comment>"Do not show this screen" label (startup screen)</comment>
  </data>
  <data name="EnterUrl.Text" xml:space="preserve">
    <value>Enter URL</value>
    <comment>Enter URL TextBlock content</comment>
  </data>
  <data name="Exit.Text" xml:space="preserve">
    <value>Exit</value>
    <comment>Exit menu text</comment>
  </data>
  <data name="FilesSynching" xml:space="preserve">
    <value>Your files are synching</value>
    <comment>Synching label</comment>
  </data>
  <data name="FilesSynchronizationPaused" xml:space="preserve">
    <value>Files synchronization stopped</value>
    <comment>Synchronization paused label</comment>
  </data>
  <data name="FilesSynchronized" xml:space="preserve">
    <value>Your files are synchronized</value>
    <comment>Synchronized label</comment>
  </data>
  <data name="HideLog" xml:space="preserve">
    <value>Hide Console</value>
    <comment>Hide Console Window</comment>
  </data>
  <data name="InvalidUrl" xml:space="preserve">
    <value>Invalid URL. Please enter a valid URL.</value>
    <comment>Invalid URL validation text</comment>
  </data>
  <data name="MountNewDrive.Text" xml:space="preserve">
    <value>Mount New Drive</value>
    <comment>Mount New Drive menu text</comment>
  </data>
  <data name="MountNewDriveButton.Content" xml:space="preserve">
    <value>Mount New Drive</value>
    <comment>Mount New Drive button label</comment>
  </data>
  <data name="OpenFolder.Text" xml:space="preserve">
    <value>Open Folder</value>
    <comment>Open Folder button text</comment>
  </data>
  <data name="OpenLogFile.Text" xml:space="preserve">
    <value>Open Log File</value>
    <comment>Open Log File menu text</comment>
  </data>
  <data name="OpenRemoteStorage.Text" xml:space="preserve">
    <value>Open Remote Storage</value>
    <comment>Open Remote Storage button text</comment>
  </data>
  <data name="RequestSupport.Text" xml:space="preserve">
    <value>Request Support</value>
    <comment>Request Support menu text</comment>
  </data>
  <data name="ShowLog" xml:space="preserve">
    <value>Show Console</value>
    <comment>Show Console Log</comment>
  </data>
  <data name="StartSynchronization.Text" xml:space="preserve">
    <value>Start Synchronization</value>
    <comment>Start Synchronization menu text</comment>
  </data>
  <data name="Startup.Title" xml:space="preserve">
    <value>Startup</value>
    <comment>Startup window title</comment>
  </data>
  <data name="StopSynchronization.Text" xml:space="preserve">
    <value>Stop Synchronization</value>
    <comment>Stop Synchronization menu text</comment>
  </data>
  <data name="TakeClient.Content" xml:space="preserve">
    <value>Take Client</value>
    <comment>Take Client button label</comment>
  </data>
  <data name="TakeServer.Content" xml:space="preserve">
    <value>Take Server</value>
    <comment>Take Server button label</comment>
  </data>
  <data name="Unmount.Text" xml:space="preserve">
    <value>Unmount</value>
    <comment>Unmount menu text</comment>
  </data>
  <data name="UrlEntry.PlaceholderText" xml:space="preserve">
    <value>Enter URL here</value>
    <comment>URL textbox placeholder</comment>
  </data>
  <data name="UrlRequiredMessage.Text" xml:space="preserve">
    <value>URL is required.</value>
    <comment>URL required validation text</comment>
  </data>
  <data name="CredentialPickerLogin.Title" xml:space="preserve">
    <value>Login</value>
    <comment>Credential Picker Login window title</comment>
  </data>
  <data name="MountNewDriveWindow.Title" xml:space="preserve">
    <value>Mount New Drive</value>
    <comment>Mount New Drive window title</comment>
  </data>
  <data name="WebBrowserLogin.Title" xml:space="preserve">
    <value>Login</value>
    <comment>Web Browser Login window title</comment>
  </data>
  <data name="Idle" xml:space="preserve">
    <value>Idle</value>
    <comment>Idle text (tray icon)</comment>
  </data>
  <data name="SynchronizationStopped" xml:space="preserve">
    <value>Synchronization stopped</value>
    <comment>Synchronization stopped text (tray icon)</comment>
  </data>
  <data name="Synching" xml:space="preserve">
    <value>Synching</value>
    <comment>Synching text (tray icon)</comment>
  </data>
  <data name="ServerTextBlock.Text" xml:space="preserve">
    <value>Server:</value>
    <comment>Server label in Compare window</comment>
  </data>
  <data name="ClientTextBlock.Text" xml:space="preserve">
    <value>Client:</value>
    <comment>Client label in Compare window</comment>
  </data>
  <data name="CreatedTextBlock.Text" xml:space="preserve">
    <value>Created:</value>
    <comment>Created label in Compare window</comment>
  </data>
  <data name="ModifiedTextBlock.Text" xml:space="preserve">
    <value>Modified:</value>
    <comment>Modified label in Compare window</comment>
  </data>
  <data name="SizeTextBlock.Text" xml:space="preserve">
    <value>Size:</value>
    <comment>Size label in Compare window</comment>
  </data>
  <data name="Bytes" xml:space="preserve">
    <value>bytes</value>
    <comment>Bytes label (Compare window)</comment>
  </data>
  <data name="BytesDifferent" xml:space="preserve">
    <value>Bytes different:</value>
    <comment>"Bytes different" label (Compare window)</comment>
  </data>
  <data name="ContentETagTextBlock.Text" xml:space="preserve">
    <value>Content eTag:</value>
    <comment>Content eTag label in Compare window</comment>
  </data>
  <data name="MetadataETagTextBlock.Text" xml:space="preserve">
    <value>Metadata eTag:</value>
    <comment>Metadata eTag label in Compare window</comment>
  </data>
  <data name="ErrorContentDialog.Title" xml:space="preserve">
    <value>Error</value>
    <comment>Error content dialog title</comment>
  </data>
  <data name="ErrorContentDialog/CloseButtonText" xml:space="preserve">
    <value>OK</value>
    <comment>Error content dialog close button text</comment>
  </data>
</root>